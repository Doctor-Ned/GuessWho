<Window x:Class="GuessWho.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:GuessWho.ViewModel"
        xmlns:local="clr-namespace:GuessWho.View"
        xmlns:controls="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="Zgadnij Kto To?" MinHeight="400" MinWidth="600"
        Height="{Binding WindowHeight, Mode=TwoWay}" Width="{Binding WindowWidth, Mode=TwoWay}" x:Name="Window">
    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding OnLoaded}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding OnClosing}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Style x:Key="MediumIconButton" TargetType="Button"
               BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Margin" Value="3" />
        </Style>
        <Style x:Key="BigPackIcon" TargetType="materialDesign:PackIcon">
            <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.75" ScaleY="1.75" />
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <DockPanel>
            <Grid DockPanel.Dock="Right" Width="{Binding SidePanelWidth}">
                <Border BorderThickness="2 0 0 0" BorderBrush="Black" />
                <DockPanel>
                    <Grid DockPanel.Dock="Top"
                          Visibility="{Binding ShowSettings, Converter={StaticResource BooleanToVisibilityConverter}}"
                          VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="#15FFFFFF">
                        <StackPanel Margin="10">
                            <Label Content="{Binding IconSize}" ContentStringFormat="Rozmiar ikon: {0}" FontSize="13"
                                   HorizontalAlignment="Left" />
                            <Slider Minimum="35" Maximum="125" TickFrequency="1" IsSnapToTickEnabled="True"
                                    VerticalAlignment="Center" HorizontalAlignment="Stretch" Value="{Binding IconSize}" />
                            <Separator Opacity="0.5" />
                            <Label Content="{Binding CategoryCheckBoxSize}"
                                   ContentStringFormat="Rozmiar kategorii: {0}" FontSize="13"
                                   HorizontalAlignment="Left" />
                            <Slider Minimum="1.0" Maximum="2.0" TickFrequency="0.1" IsSnapToTickEnabled="True"
                                    VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                    Value="{Binding CategoryCheckBoxSize}" />
                            <Separator Opacity="0.5" />
                            <Label Content="{Binding CategoryFontSize}"
                                   ContentStringFormat="Rozmiar czcionki kategorii: {0}" FontSize="13"
                                   HorizontalAlignment="Left" />
                            <Slider Minimum="5" Maximum="25" TickFrequency="1" IsSnapToTickEnabled="True"
                                    VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                    Value="{Binding CategoryFontSize}" />
                            <Separator Opacity="0.5" />
                            <Label Content="{Binding SidePanelWidth}"
                                   ContentStringFormat="Szerokość panelu bocznego: {0}" FontSize="13"
                                   HorizontalAlignment="Left" />
                            <Slider Minimum="220" Maximum="400" TickFrequency="10" IsSnapToTickEnabled="True"
                                    VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                    Value="{Binding SidePanelWidth}" />
                            <Separator Opacity="0.5" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <Label Content="Pokazuj tooltipy" Margin="0,0,5,0" />
                                <CheckBox IsChecked="{Binding ShowTooltips}" />
                            </StackPanel>
                            <Separator Opacity="0.5" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button Style="{StaticResource MediumIconButton}" Command="{Binding ResetGame}"
                                        ToolTip="Zresetuj grę">
                                    <materialDesign:PackIcon Style="{StaticResource BigPackIcon}" Kind="Restore" />
                                </Button>
                                <Button Style="{StaticResource MediumIconButton}" Command="{Binding LoadConfig}"
                                        ToolTip="Wczytaj konfigurację">
                                    <materialDesign:PackIcon Style="{StaticResource BigPackIcon}" Kind="FileDownload" />
                                </Button>
                                <Button Style="{StaticResource MediumIconButton}" Command="{Binding SaveConfig}"
                                        ToolTip="Zapisz konfigurację">
                                    <materialDesign:PackIcon Style="{StaticResource BigPackIcon}" Kind="FileUpload" />
                                </Button>
                                <Button Style="{StaticResource MediumIconButton}" Command="{Binding ResetConfig}"
                                        ToolTip="Zresetuj konfigurację">
                                    <materialDesign:PackIcon Style="{StaticResource BigPackIcon}" Kind="ContentSaveOff" />
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <Button Style="{StaticResource MaterialDesignRaisedAccentButton}" DockPanel.Dock="Bottom"
                            Margin="0,5,0,5" HorizontalAlignment="Center" VerticalAlignment="Center"
                            Command="{Binding RestoreChampions}"
                            Visibility="{Binding AnyChampionsRejected, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="AccountArrowLeft" Margin="0,5,5,5"
                                                     RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                <materialDesign:PackIcon.RenderTransform>
                                    <ScaleTransform ScaleX="1.3" ScaleY="1.3" />
                                </materialDesign:PackIcon.RenderTransform>
                            </materialDesign:PackIcon>
                            <TextBlock Text="PRZYWRÓĆ POSTAĆ" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button>
                    <ListView ItemsSource="{Binding Categories}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Margin" Value="3" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Focusable" Value="False" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="5,3,5,3" Orientation="Horizontal">
                                    <CheckBox Margin="0,0,5,0" IsChecked="{Binding IsSelected}"
                                              RenderTransformOrigin="0.5,0.5">
                                        <CheckBox.RenderTransform>
                                            <ScaleTransform
                                                ScaleX="{Binding Path=DataContext.CategoryCheckBoxSize, ElementName=Window}"
                                                ScaleY="{Binding Path=DataContext.CategoryCheckBoxSize, ElementName=Window}" />
                                        </CheckBox.RenderTransform>
                                    </CheckBox>
                                    <Label Content="{Binding CategoryName}"
                                           FontSize="{Binding Path=DataContext.CategoryFontSize, ElementName=Window}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </DockPanel>
                <Ellipse Width="58" Height="58" HorizontalAlignment="Right" VerticalAlignment="Top"
                         Margin="0,-20,-20,0" Fill="#70000000" />
                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Width="25" Height="25"
                        VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,5,5,0"
                        Command="{Binding ToggleSettings}">
                    <materialDesign:PackIcon
                        Kind="{Binding ShowSettings, Converter={StaticResource BoolToSettingsIconConverter}}" />
                </Button>
            </Grid>
            <ListBox ItemsSource="{Binding Champions}" VirtualizingPanel.IsVirtualizing="True"
                     VirtualizingPanel.ScrollUnit="Item"
                     VirtualizingPanel.VirtualizationMode="Recycling" VerticalAlignment="Stretch"
                     HorizontalAlignment="Stretch"
                     Background="Black" SelectionMode="Single" x:Name="ChampionBox">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <controls:VirtualizingWrapPanel
                            ItemSize="{Binding IconSize, Converter={StaticResource IntToSizeConverter}}" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="{Binding Path=DataContext.IconSize, ElementName=Window}"
                              Height="{Binding Path=Width, RelativeSource={RelativeSource Self}}">
                            <Image Source="{Binding Path=Champion, Converter={StaticResource ChampionToImageConverter}}"
                                   ToolTipService.InitialShowDelay="750"
                                   ToolTipService.Placement="Mouse"
                                   ToolTipService.IsEnabled="{Binding Path=DataContext.ShowTooltips, ElementName=Window}">
                                <Image.ToolTip>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock FontWeight="Bold" Text="{Binding Path=Champion, Converter={StaticResource ChampionToNameConverter}}"/>
                                        <TextBlock Text="{Binding Path=Description}"/>
                                    </StackPanel>
                                </Image.ToolTip>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction
                                            Command="{Binding Path=DataContext.RejectChampion, ElementName=Window}"
                                            CommandParameter="{Binding Champion}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Image>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
        <materialDesign:DialogHost Identifier="{Binding DialogIdentifier1}" />
        <materialDesign:DialogHost Identifier="{Binding DialogIdentifier2}" />
    </Grid>
</Window>